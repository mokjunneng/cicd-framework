name: Build
on: [push, pull_request]
jobs:
  # TODO: debug why cant run lint job, runner issue?
  lint:
    runs-on: ubuntu-latest
    # container:
    # image:
    # env:
    # ports:
    # volumes:
    # options:
    steps:
      # local path: ./.github/actions/my-action, public action: {owner}/{repo}/{path}@{ref}
      # Choose the right linting action for your language
      - uses: actions/setup-go@v1
      - uses: actions/checkout@v2
      - id: go-lint
        uses: ./.github/actions/go-lint
        with:
          path: ./app...
          output: lint.xml # standardized path to match sonarqube properties
          #config-path:
      - name: Upload lint as artifact
        uses: actions/upload-artifact@v2
        with:
          name: lint-result
          path: lint.xml
  test:
    runs-on: ubuntu-latest
    needs: lint
    # container:
    #   image:
    #   env:
    #   ports:
    #   volumes:
    #   options:
    steps:
      # Choose the right testing action for your language
      - uses: actions/setup-go@v1
      - uses: actions/checkout@v2
      - uses: ./.github/actions/go-test
        with:
          path: ./app/test
          test-report-path: tests.out # standardized path to match sonarqube properties
          coverage-report-path: coverage.out # standardized path to match sonarqube properties
      - name: Upload test results as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: tests.out
      - name: Upload test coverage as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.out
  sonarScan:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v2
      # - uses: docker://sonarsource/sonar-scanner-cli:latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Download test results
        uses: actions/download-artifact@v1
        with:
          name: test-report
          path: tests.out
      - name: Download code coverage results
        uses: actions/download-artifact@v1
        with:
          name: coverage-report
          path: coverage.out
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: [lint, test, sonarScan]
    steps:
      - uses: actions/setup-go@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/go-build
        with:
          packages: ./app
          output: build
          artifact-name: build
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: build
          path: build
      # Alternative is to setup our container with awscli installed
      - name: Upload build to S3
        uses: docker://amazon/aws-cli:2.0.7
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: s3 cp /github/home/build s3://atomicloud-cicd-test/build-${{ github.sha }}
  goreleaser:
    runs-on: ubuntu-latest
    needs: [lint, test, sonarScan]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
